name: Build

on:
  workflow_call:
    inputs:
      node-code-pre-test:
        required: false
        type: string
    secrets:
      SNYK_TOKEN:
        required: false
      NPM_TOKEN:
        required: false

permissions: {}

jobs:
  call-workflow:
    uses: ./.github/workflows/build-general.yml
    secrets: inherit
    permissions:
      security-events: write
      actions: read
      contents: read
      issues: read
      pull-requests: read
    with:
      node-code-pre-test: DISABLE

  test-unit:
    if: "inputs.node-code-pre-test != 'DISABLE'"
    needs: call-workflow
    name: Run unit tests
    permissions:
      pull-requests: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false
          show-progress: false
      - name: Run unit tests
        uses: warriors-life/.warriors-life-workflows/run-unit-tests@dev
        with:
          node-code-pre-test: ${{ inputs.node-code-pre-test }}
          coverage: coverage/coverage.json
      - name: Upload coverage file
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: Coverage
          path: test/coverage/coverage.json
      - name: Move coverage file
        run: mv test/coverage/coverage.json /tmp
      - name: Checkout base ref
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false
          show-progress: false
          ref: ${{ github.base_ref || 'dev' }}
      - name: Run units tests on base
        uses: warriors-life/.warriors-life-workflows/run-unit-tests@dev
        with:
          node-code-pre-test: ${{ inputs.node-code-pre-test }}
          coverage: coverage/coverage.json
      - id: coverage-report
        name: Generate coverage report
        uses: ArtiomTr/jest-coverage-report-action@d438b94580c2c47599ce7abc62d26d1acd1661eb
        with:
          coverage-file: /tmp/coverage.json
          base-coverage-file: test/coverage/coverage.json
          output: ${{ github.event_name == 'pull_request' && 'comment' || 'report-markdown' }}
      - name: Write coverage report
        if: "github.event_name != 'pull_request'"
        run: |
          cat <<"EOF"
          ${{ steps.coverage-report.outputs.report }}
          EOF > /tmp/coverage-report.md
      - name: Upload coverage report
        if: "github.event_name != 'pull_request'"
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: Coverage report
          path: /tmp/coverage-report.md

  push:
    if: github.ref_type == 'tag'
    needs: test-unit
    name: Publish package in the registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
      contents: read
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            *.sigstore.dev:443
            npm.pkg.github.com:443
            github.com:443
            registry.npmjs.org:443
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          sparse-checkout: src
          persist-credentials: false
          show-progress: false
      - name: Setup Node # TODO: do we need this? maybe this is required when we're publishing package that has GPR dependencies?
        uses: warriors-life/.warriors-life-workflows/setup-node@dev
      - name: Move README and license
        run: mv README.md src && mv LICENSE src
      - name: Publish package to NPM
        if: "!github.event.repository.private"
        uses: JS-DevTools/npm-publish@fe72237be0920f7a0cafd6a966c9b929c9466e9b
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: src
          provenance: true
          access: public
      - name: Modify package name
        uses: maxgfr/github-change-json@c91f4973a570c0ed6b0867e49372f5e9f1063ca8
        with:
          key: name
          value: ${{ format('@{0}', github.repository) }}
          path: src/package.json
      - name: Publish package to NPM (scoped)
        if: "!github.event.repository.private"
        uses: JS-DevTools/npm-publish@fe72237be0920f7a0cafd6a966c9b929c9466e9b
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: src
          provenance: true
          access: public
      - name: Publish package to GPR
        uses: JS-DevTools/npm-publish@fe72237be0920f7a0cafd6a966c9b929c9466e9b
        with:
          registry: 'https://npm.pkg.github.com/'
          token: ${{ github.token }}
          package: src
          provenance: ${{ !github.event.repository.private }}
          access: ${{ github.event.repository.private && 'restricted' || 'public' }}

  release:
    if: github.ref_type == 'tag'
    needs: push
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            uploads.github.com:443
            github.com:443
            registry.npmjs.org:443
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
        with:
          persist-credentials: false
          show-progress: false
      - name: Setup Node # TODO: do we need this? maybe this is required when we're publishing package that has GPR dependencies?
        uses: warriors-life/.warriors-life-workflows/setup-node@dev
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@4db7ff8e9cc8a442ab103fd3ddfaebd0f8f36e4c
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Get archive name
        id: archive-name
        run: |
          echo "name=$repository-${tag#v}" >> $GITHUB_OUTPUT
        env:
          tag: ${{ github.ref_name }}
          repository: ${{ github.event.repository.name }}
      - name: Sign files
        run: |
          git -c tar.tar.gz.command='gzip -cn' archive --format=tar.gz --prefix="$archivename/" -o "../$archivename.tar.gz" "$tag"
          gpg --armor --detach-sign "../$archivename.tar.gz"
          npm pack src/
          gpg --armor --detach-sign *.tgz
        env:
          tag: ${{ github.ref_name }}
          archivename: ${{ steps.archive-name.outputs.name }}
      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            *.tgz
            *.tgz.asc
            ../${{ steps.archive-name.outputs.name }}.tar.gz.asc
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
